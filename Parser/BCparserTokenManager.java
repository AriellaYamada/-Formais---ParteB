/* Generated By:JavaCC: Do not edit this line. BCparserTokenManager.java */
import java.io.*;

/** Token Manager. */
public class BCparserTokenManager implements BCparserConstants
{

  /** Debug output. */
  public static  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public static  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private static final int jjStopStringLiteralDfa_0(int pos, long active0)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x10000000000000L) != 0L)
            return 24;
         if ((active0 & 0x4000000000000L) != 0L)
            return 132;
         if ((active0 & 0x40000000000000L) != 0L)
            return 47;
         if ((active0 & 0x20000000000000L) != 0L)
            return 140;
         if ((active0 & 0x8000000000000L) != 0L)
            return 56;
         if ((active0 & 0x80000000000000L) != 0L)
            return 74;
         if ((active0 & 0x40L) != 0L)
         {
            jjmatchedKind = 12;
            return 0;
         }
         return -1;
      default :
         return -1;
   }
}
private static final int jjStartNfa_0(int pos, long active0)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0), pos + 1);
}
static private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
static private int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 47:
         return jjMoveStringLiteralDfa1_0(0x40L);
      case 65:
      case 97:
         return jjStartNfaWithStates_0(0, 54, 47);
      case 67:
      case 99:
         return jjStartNfaWithStates_0(0, 51, 56);
      case 69:
      case 101:
         return jjStartNfaWithStates_0(0, 52, 24);
      case 74:
      case 106:
         return jjStartNfaWithStates_0(0, 55, 74);
      case 76:
      case 108:
         return jjStartNfaWithStates_0(0, 53, 140);
      case 83:
      case 115:
         return jjStartNfaWithStates_0(0, 50, 132);
      default :
         return jjMoveNfa_0(5, 0);
   }
}
static private int jjMoveStringLiteralDfa1_0(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 42:
         if ((active0 & 0x40L) != 0L)
            return jjStopAtPos(1, 6);
         break;
      default :
         break;
   }
   return jjStartNfa_0(0, active0);
}
static private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 148;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 47:
               case 74:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAdd(74);
                  break;
               case 56:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAdd(74);
                  break;
               case 132:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAdd(74);
                  break;
               case 0:
                  if (curChar == 61)
                  {
                     if (kind > 23)
                        kind = 23;
                  }
                  else if (curChar == 47)
                     jjCheckNAddStates(0, 2);
                  break;
               case 140:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAdd(74);
                  break;
               case 24:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAdd(74);
                  break;
               case 5:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 72)
                        kind = 72;
                     jjCheckNAddStates(3, 5);
                  }
                  else if ((0x280000000000L & l) != 0L)
                     jjCheckNAddTwoStates(76, 77);
                  else if (curChar == 46)
                  {
                     if (kind > 41)
                        kind = 41;
                  }
                  else if (curChar == 34)
                  {
                     if (kind > 38)
                        kind = 38;
                     jjCheckNAddStates(6, 10);
                  }
                  else if (curChar == 61)
                  {
                     if (kind > 42)
                        kind = 42;
                     jjstateSet[jjnewStateCnt++] = 102;
                  }
                  else if (curChar == 60)
                  {
                     if (kind > 28)
                        kind = 28;
                     jjstateSet[jjnewStateCnt++] = 100;
                  }
                  else if (curChar == 62)
                  {
                     if (kind > 27)
                        kind = 27;
                     jjstateSet[jjnewStateCnt++] = 98;
                  }
                  else if (curChar == 33)
                  {
                     if (kind > 20)
                        kind = 20;
                     jjstateSet[jjnewStateCnt++] = 96;
                  }
                  else if (curChar == 37)
                  {
                     if (kind > 14)
                        kind = 14;
                     jjstateSet[jjnewStateCnt++] = 92;
                  }
                  else if (curChar == 42)
                  {
                     if (kind > 13)
                        kind = 13;
                     jjstateSet[jjnewStateCnt++] = 90;
                  }
                  else if (curChar == 47)
                  {
                     if (kind > 12)
                        kind = 12;
                     jjstateSet[jjnewStateCnt++] = 88;
                  }
                  else if (curChar == 59)
                  {
                     if (kind > 43)
                        kind = 43;
                  }
                  else if (curChar == 44)
                  {
                     if (kind > 37)
                        kind = 37;
                  }
                  else if (curChar == 41)
                  {
                     if (kind > 34)
                        kind = 34;
                  }
                  else if (curChar == 40)
                  {
                     if (kind > 33)
                        kind = 33;
                  }
                  else if (curChar == 38)
                     jjstateSet[jjnewStateCnt++] = 9;
                  if (curChar == 45)
                  {
                     if (kind > 11)
                        kind = 11;
                     jjAddStates(11, 12);
                  }
                  else if (curChar == 43)
                  {
                     if (kind > 10)
                        kind = 10;
                     jjAddStates(13, 14);
                  }
                  else if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 0;
                  break;
               case 1:
                  if ((0xffffffffffffdbffL & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  break;
               case 2:
                  if ((0x2400L & l) != 0L && kind > 5)
                     kind = 5;
                  break;
               case 3:
                  if (curChar == 10 && kind > 5)
                     kind = 5;
                  break;
               case 4:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 8:
                  if (curChar == 38)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 9:
                  if (curChar == 38 && kind > 19)
                     kind = 19;
                  break;
               case 10:
                  if (curChar == 40 && kind > 33)
                     kind = 33;
                  break;
               case 11:
                  if (curChar == 41 && kind > 34)
                     kind = 34;
                  break;
               case 14:
                  if (curChar == 44 && kind > 37)
                     kind = 37;
                  break;
               case 17:
                  if (curChar == 59 && kind > 43)
                     kind = 43;
                  break;
               case 75:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAddTwoStates(76, 77);
                  break;
               case 76:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 72)
                     kind = 72;
                  jjCheckNAdd(76);
                  break;
               case 77:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(77, 78);
                  break;
               case 78:
                  if (curChar == 46)
                     jjCheckNAdd(79);
                  break;
               case 79:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 72)
                     kind = 72;
                  jjCheckNAdd(79);
                  break;
               case 80:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 72)
                     kind = 72;
                  jjCheckNAddStates(3, 5);
                  break;
               case 81:
                  if (curChar != 43)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjAddStates(13, 14);
                  break;
               case 82:
                  if (curChar == 43 && kind > 16)
                     kind = 16;
                  break;
               case 83:
                  if (curChar == 61 && kind > 22)
                     kind = 22;
                  break;
               case 84:
                  if (curChar != 45)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjAddStates(11, 12);
                  break;
               case 85:
                  if (curChar == 45 && kind > 17)
                     kind = 17;
                  break;
               case 86:
                  if (curChar == 61 && kind > 21)
                     kind = 21;
                  break;
               case 87:
                  if (curChar != 47)
                     break;
                  if (kind > 12)
                     kind = 12;
                  jjstateSet[jjnewStateCnt++] = 88;
                  break;
               case 88:
                  if (curChar == 61 && kind > 23)
                     kind = 23;
                  break;
               case 89:
                  if (curChar != 42)
                     break;
                  if (kind > 13)
                     kind = 13;
                  jjstateSet[jjnewStateCnt++] = 90;
                  break;
               case 90:
                  if (curChar == 61 && kind > 24)
                     kind = 24;
                  break;
               case 91:
                  if (curChar != 37)
                     break;
                  if (kind > 14)
                     kind = 14;
                  jjstateSet[jjnewStateCnt++] = 92;
                  break;
               case 92:
                  if (curChar == 61 && kind > 25)
                     kind = 25;
                  break;
               case 94:
                  if (curChar == 61 && kind > 26)
                     kind = 26;
                  break;
               case 95:
                  if (curChar != 33)
                     break;
                  if (kind > 20)
                     kind = 20;
                  jjstateSet[jjnewStateCnt++] = 96;
                  break;
               case 96:
                  if (curChar == 61 && kind > 32)
                     kind = 32;
                  break;
               case 97:
                  if (curChar != 62)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjstateSet[jjnewStateCnt++] = 98;
                  break;
               case 98:
                  if (curChar == 61 && kind > 29)
                     kind = 29;
                  break;
               case 99:
                  if (curChar != 60)
                     break;
                  if (kind > 28)
                     kind = 28;
                  jjstateSet[jjnewStateCnt++] = 100;
                  break;
               case 100:
                  if (curChar == 61 && kind > 30)
                     kind = 30;
                  break;
               case 101:
                  if (curChar != 61)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 102:
                  if (curChar == 61 && kind > 31)
                     kind = 31;
                  break;
               case 103:
                  if (curChar != 34)
                     break;
                  if (kind > 38)
                     kind = 38;
                  jjCheckNAddStates(6, 10);
                  break;
               case 104:
                  if ((0x7fffffe300000000L & l) != 0L)
                     jjCheckNAddStates(6, 10);
                  break;
               case 105:
                  if (curChar == 34 && kind > 75)
                     kind = 75;
                  break;
               case 106:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAddTwoStates(107, 109);
                  break;
               case 107:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(6, 10);
                  break;
               case 108:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(15, 21);
                  break;
               case 109:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(109, 110);
                  break;
               case 110:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 111;
                  break;
               case 111:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(22, 26);
                  break;
               case 112:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(27, 34);
                  break;
               case 118:
                  if (curChar == 46 && kind > 41)
                     kind = 41;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 47:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     jjCheckNAdd(74);
                  }
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 56:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     jjCheckNAdd(74);
                  }
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 132:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     jjCheckNAdd(74);
                  }
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 137;
                  else if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               case 140:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     jjCheckNAdd(74);
                  }
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 144;
                  else if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 141;
                  break;
               case 24:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     jjCheckNAdd(74);
                  }
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 5:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     jjCheckNAdd(74);
                  }
                  else if (curChar == 92)
                     jjCheckNAddStates(35, 38);
                  else if (curChar == 94)
                  {
                     if (kind > 15)
                        kind = 15;
                     jjstateSet[jjnewStateCnt++] = 94;
                  }
                  else if (curChar == 93)
                  {
                     if (kind > 40)
                        kind = 40;
                  }
                  else if (curChar == 91)
                  {
                     if (kind > 39)
                        kind = 39;
                  }
                  else if (curChar == 125)
                  {
                     if (kind > 36)
                        kind = 36;
                  }
                  else if (curChar == 123)
                  {
                     if (kind > 35)
                        kind = 35;
                  }
                  else if (curChar == 124)
                     jjstateSet[jjnewStateCnt++] = 7;
                  if ((0x100000001000L & l) != 0L)
                     jjAddStates(39, 40);
                  else if ((0x8000000080000L & l) != 0L)
                     jjAddStates(41, 42);
                  else if ((0x20000000200L & l) != 0L)
                     jjAddStates(43, 44);
                  else if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 68;
                  else if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 64;
                  else if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 56;
                  else if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 51;
                  else if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 47;
                  else if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 41;
                  else if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 36;
                  else if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 33;
                  else if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 28;
                  else if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 24;
                  else if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 1:
                  jjAddStates(0, 2);
                  break;
               case 6:
                  if (curChar == 124)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 7:
                  if (curChar == 124 && kind > 18)
                     kind = 18;
                  break;
               case 12:
                  if (curChar == 123 && kind > 35)
                     kind = 35;
                  break;
               case 13:
                  if (curChar == 125 && kind > 36)
                     kind = 36;
                  break;
               case 15:
                  if (curChar == 91 && kind > 39)
                     kind = 39;
                  break;
               case 16:
                  if (curChar == 93 && kind > 40)
                     kind = 40;
                  break;
               case 18:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 19:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 20:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 21:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 22:
                  if ((0x2000000020L & l) != 0L && kind > 47)
                     kind = 47;
                  break;
               case 23:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 25:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 26:
                  if ((0x2000000020L & l) != 0L && kind > 57)
                     kind = 57;
                  break;
               case 27:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 28:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 29:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 30:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 31:
                  if ((0x2000000020L & l) != 0L && kind > 58)
                     kind = 58;
                  break;
               case 32:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 33:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 34:
                  if ((0x4000000040000L & l) != 0L && kind > 59)
                     kind = 59;
                  break;
               case 35:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 36:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 37:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 38:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 39:
                  if ((0x10000000100000L & l) != 0L && kind > 60)
                     kind = 60;
                  break;
               case 40:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 41:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 42:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 43:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 44:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 45:
                  if ((0x2000000020L & l) != 0L && kind > 61)
                     kind = 61;
                  break;
               case 46:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 48:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 49:
                  if ((0x800000008000L & l) != 0L && kind > 62)
                     kind = 62;
                  break;
               case 50:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 51:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 52;
                  break;
               case 52:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 53:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 54:
                  if ((0x80000000800L & l) != 0L && kind > 63)
                     kind = 63;
                  break;
               case 55:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 57:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 58;
                  break;
               case 58:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 59:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 60;
                  break;
               case 60:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 61:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 62:
                  if ((0x2000000020L & l) != 0L && kind > 64)
                     kind = 64;
                  break;
               case 63:
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 64:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 65:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 66:
                  if ((0x10000000100000L & l) != 0L && kind > 65)
                     kind = 65;
                  break;
               case 67:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 68;
                  break;
               case 68:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 69;
                  break;
               case 69:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 70;
                  break;
               case 70:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 71;
                  break;
               case 71:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 72;
                  break;
               case 72:
                  if ((0x400000004000L & l) != 0L && kind > 66)
                     kind = 66;
                  break;
               case 73:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAdd(74);
                  break;
               case 74:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAdd(74);
                  break;
               case 93:
                  if (curChar != 94)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 104:
                  if ((0x3ffffffeeffffffeL & l) != 0L)
                     jjCheckNAddStates(6, 10);
                  break;
               case 113:
                  if (curChar == 92)
                     jjCheckNAddStates(45, 47);
                  break;
               case 114:
                  if ((0x400000004000L & l) != 0L)
                     jjCheckNAddStates(6, 10);
                  break;
               case 115:
                  if (curChar == 92)
                     jjCheckNAdd(114);
                  break;
               case 116:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 117:
                  if ((0x4000000040000L & l) != 0L)
                     jjCheckNAddStates(6, 10);
                  break;
               case 119:
                  if (curChar == 92)
                     jjCheckNAddStates(35, 38);
                  break;
               case 120:
                  if ((0x400000004000L & l) != 0L && kind > 9)
                     kind = 9;
                  break;
               case 121:
                  if ((0x4000000040000L & l) != 0L && kind > 9)
                     kind = 9;
                  break;
               case 122:
                  if (curChar == 92)
                     jjCheckNAdd(120);
                  break;
               case 123:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 122;
                  break;
               case 124:
                  if ((0x400000004000L & l) != 0L && kind > 43)
                     kind = 43;
                  break;
               case 125:
                  if ((0x20000000200L & l) != 0L)
                     jjAddStates(43, 44);
                  break;
               case 126:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 127;
                  break;
               case 127:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 128;
                  break;
               case 128:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 129;
                  break;
               case 129:
                  if ((0x2000000020L & l) != 0L && kind > 44)
                     kind = 44;
                  break;
               case 130:
                  if ((0x4000000040L & l) != 0L && kind > 56)
                     kind = 56;
                  break;
               case 131:
                  if ((0x8000000080000L & l) != 0L)
                     jjAddStates(41, 42);
                  break;
               case 133:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 134;
                  break;
               case 134:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 135;
                  break;
               case 135:
                  if ((0x2000000020L & l) != 0L && kind > 45)
                     kind = 45;
                  break;
               case 136:
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 137;
                  break;
               case 137:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 138;
                  break;
               case 138:
                  if ((0x10000000100000L & l) != 0L && kind > 48)
                     kind = 48;
                  break;
               case 139:
                  if ((0x100000001000L & l) != 0L)
                     jjAddStates(39, 40);
                  break;
               case 141:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 142;
                  break;
               case 142:
                  if ((0x10000000100000L & l) != 0L && kind > 46)
                     kind = 46;
                  break;
               case 143:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 144;
                  break;
               case 144:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 145;
                  break;
               case 145:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 146;
                  break;
               case 146:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 147;
                  break;
               case 147:
                  if ((0x10000000100L & l) != 0L && kind > 49)
                     kind = 49;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(0, 2);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 148 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static private int jjMoveStringLiteralDfa0_1()
{
   switch(curChar)
   {
      case 42:
         return jjMoveStringLiteralDfa1_1(0x80L);
      default :
         return 1;
   }
}
static private int jjMoveStringLiteralDfa1_1(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 1;
   }
   switch(curChar)
   {
      case 47:
         if ((active0 & 0x80L) != 0L)
            return jjStopAtPos(1, 7);
         break;
      default :
         return 2;
   }
   return 2;
}
static final int[] jjnextStates = {
   1, 2, 4, 76, 77, 78, 104, 105, 106, 108, 113, 85, 86, 82, 83, 104, 
   109, 110, 105, 106, 108, 113, 104, 105, 106, 112, 113, 104, 109, 110, 105, 106, 
   108, 113, 112, 120, 121, 123, 124, 140, 143, 132, 136, 126, 130, 116, 117, 114, 
};

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, };

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
   "multilinecomment",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, -1, -1, -1, -1, -1, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, 
};
static final long[] jjtoToken = {
   0xfffffffffffffe01L, 0xd07L, 
};
static final long[] jjtoSkip = {
   0x1feL, 0x0L, 
};
static protected SimpleCharStream input_stream;
static private final int[] jjrounds = new int[148];
static private final int[] jjstateSet = new int[296];
static protected char curChar;
/** Constructor. */
public BCparserTokenManager(SimpleCharStream stream){
   if (input_stream != null)
      throw new TokenMgrError("ERROR: Second call to constructor of static lexer. You must use ReInit() to initialize the static variables.", TokenMgrError.STATIC_LEXER_ERROR);
   input_stream = stream;
}

/** Constructor. */
public BCparserTokenManager(SimpleCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}

/** Reinitialise parser. */
static public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
static private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 148; i-- > 0;)
      jjrounds[i] = 0x80000000;
}

/** Reinitialise parser. */
static public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}

/** Switch to specified lex state. */
static public void SwitchTo(int lexState)
{
   if (lexState >= 2 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

static protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

static int curLexState = 0;
static int defaultLexState = 0;
static int jjnewStateCnt;
static int jjround;
static int jjmatchedPos;
static int jjmatchedKind;

/** Get the next Token. */
public static Token getNextToken() 
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      return matchedToken;
   }

   switch(curLexState)
   {
     case 0:
       try { input_stream.backup(0);
          while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
             curChar = input_stream.BeginToken();
       }
       catch (java.io.IOException e1) { continue EOFLoop; }
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_0();
       break;
     case 1:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_1();
       if (jjmatchedPos == 0 && jjmatchedKind > 8)
       {
          jjmatchedKind = 8;
       }
       break;
   }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else
        {
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

static private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
static private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
static private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

static private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

}
